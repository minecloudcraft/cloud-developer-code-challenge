on:
  push:
    branches:
      - develop

jobs:
  terraform-init:
      runs-on: ubuntu-latest
      env:
        ACCESS_TOKEN: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_access: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_role-arn: ${{ secrets.AWS_ROLE_ARN }}   
      steps:
      - uses: arun291091/wait_for_approval_gha@v1
        with:
          base_repository_branch: develop
          github_org: mtkaczjr
          repository_name: cloud-developer-code-challenge
          pr_reviewer: mtkaczjr, anderson.carvalho@minecloudcraft.com 
          time_limit: 3600
          github_token: ${{ GITHUB_TOKEN }}      
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"      
      - run: cd terraform && terraform init

  terraform-validate:
      runs-on: ubuntu-latest
      env:
        ACCESS_TOKEN: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_access: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_role-arn: ${{ secrets.AWS_ROLE_ARN }}   
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"      
      - run: cd terraform && terraform validate
      needs: [terraform-init]
    
  terraform-plan:      
      runs-on: ubuntu-latest
      env:
        ACCESS_TOKEN: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_access: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_role-arn: ${{ secrets.AWS_ROLE_ARN }}   
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
      - run: cd terraform && terraform plan
      needs: [terraform-init, terraform-validate]
    
  terraform-apply:      
      runs-on: ubuntu-latest
      env:
        ACCESS_TOKEN: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_access: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_role-arn: ${{ secrets.AWS_ROLE_ARN }}      
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"      
      - run: cd terraform && terraform apply
      needs: [terraform-init, terraform-validate, terraform-plan]

  terraform-destroy:
      runs-on: ubuntu-latest
      env:
        ACCESS_TOKEN: ${{ secrets.AWS_ACCESS_KEY_ID }}
        SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_access: ${{ secrets.AWS_ACCESS_KEY_ID }}
        TF_VAR_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_role-arn: ${{ secrets.AWS_ROLE_ARN }}   
      steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"     
      - run: cd terraform && terraform apply  
      needs: [terraform-init, terraform-validate, terraform-plan, terraform-apply]